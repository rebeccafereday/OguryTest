// Generated by CoffeeScript 1.8.0
(function() {
  var Advert, User, app, bodyParser, express, mongoose, port, router, _;

  express = require("express");

  mongoose = require("mongoose");

  bodyParser = require("body-parser");

  _ = require("underscore");

  User = require("../models/adUser.js");

  Advert = require("../models/adAdvert.js");

  mongoose.connect("mongodb://fereday:tesco123@ds031108.mongolab.com:31108/boudica");

  app = express();

  app.use(bodyParser.urlencoded({
    extended: false
  }));

  app.use(bodyParser.json());

  port = process.env.PORT || 3040;

  router = express.Router();

  app.use("/api", router);

  router.post("/user", function(req, res) {
    var user;
    user = new User();
    _.extend(user, req.body);
    if (user.aaid) {
      User.findOne({
        aaid: req.body.aaid
      }, function(findUserErr, findUserRes) {
        if (findUserErr) {
          return res.send({
            code: 500,
            body: findUserErr
          });
        } else if (findUserRes == null) {
          user.save(function(saveUserErr, saveUserRes) {
            if (saveUserErr) {
              return res.send({
                code: 500,
                body: saveUserErr
              });
            } else {
              return res.send({
                code: 200,
                body: saveUserRes
              });
            }
          });
        } else {
          return res.send({
            code: 200,
            body: findUserRes
          });
        }
      });
    } else {
      return res.send({
        code: 400,
        body: "Please include an aaid in the request body object"
      });
    }
  });

  router.get("/add/:id", function(req, res) {
    var date, day, four, hour, userID;
    userID = req.params.id;
    date = new Date();
    day = Math.floor(date.getTime() / 86400000);
    hour = Math.floor(date.getTime() / 3600000);
    four = hour - 4;
    return User.findOne({
      _id: userID
    }, function(findUserErr, findUserRes) {
      if (findUserErr) {
        res.send({
          code: 500,
          body: findUserErr
        });
      } else if (findUserRes != null) {
        if (findUserRes.last_visit_hours < four && findUserRes.total_views < 10 && (findUserRes.last_visit_day === day && findUserRes.daily_views < 3 || findUserRes.last_visit_day < day)) {
          Advert.find({
            _id: {
              $nin: findUserRes.viewed_articles
            }
          }, function(findAdvertErr, findAdvertRes) {
            var advert, count, rand;
            if (findAdvertErr) {
              return res.send({
                code: 500,
                body: findAdvertErr
              });
            } else if (findAdvertRes.length > 0) {
              count = findAdvertRes.length;
              rand = Math.floor(Math.random() * count);
              advert = findAdvertRes[rand];
              findUserRes.daily_views = findUserRes.last_visit_day === day ? findUserRes.daily_views + 1 : 1;
              findUserRes.last_visit_day = day;
              findUserRes.last_visit_hours = hour;
              findUserRes.total_views++;
              findUserRes.viewed_articles.push(advert._id);
              return findUserRes.save(function(saveUserErr, saveUserRes) {
                if (saveUserErr) {
                  res.send({
                    code: 500,
                    body: saveUserErr
                  });
                } else {
                  res.send({
                    code: 200,
                    body: advert
                  });
                }
              });
            } else {
              res.send({
                code: 204,
                body: "User has viewed all adverts"
              });
            }
          });
          return;
        } else {
          res.send({
            code: 204,
            body: "No adds to show currently for this user"
          });
          return;
        }
      } else {
        res.send({
          code: 404,
          body: "No user matching this id"
        });
      }
    });
  });

  router.post("/add", function(req, res) {
    var advert;
    advert = new Advert();
    _.extend(advert, req.body);
    return advert.save(function(saveAdvertErr, saveAdvertRes) {
      if (saveAdvertErr) {
        res.send(saveAdvertErr);
      } else {
        res.send(saveAdvertRes);
      }
    });
  });

  app.listen(port);

  console.log("Listening on port " + port);

}).call(this);
